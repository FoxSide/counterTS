{"version":3,"sources":["Counter/Button/Button.module.css","reportWebVitals.ts","Counter/Button/Button.tsx","bll/counter-reducer.ts","CounterRedux/CounterRedux.tsx","bll/setCounter-reducer.ts","CounterRedux/SetCounterRedux.tsx","AppRedux.tsx","bll/store.ts","index.tsx","CounterRedux/SetCounterRedux.module.css","CounterRedux/CounterRedux.module.css","AppRedux.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","disabled","value","className","s","button","onClick","callBack","title","initialState","minValue","maxValue","SetCounterAC","type","CounterRedux","setCounter","useSelector","state","counter","dispatch","useDispatch","Error","screen","error","showStartText","text","red","count","buttons","disabledSet","ErrorAC","change","ShowStartTextAC","DisabledButtonSetAC","SetCounterRedux","inpScreen","item","onChange","e","currentTarget","errorInp","inp","buttonBody","AppRedux","preloadedState","appWrapp","body","parsistedTodoString","localStorage","getItem","JSON","parse","rootReducer","combineReducers","action","store","createStore","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cfebd56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__fWm5r\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport s from './Button.module.css';\r\n\r\ntype PropsType = {\r\n  title: string\r\n  callBack: () => void\r\n  value: boolean\r\n}\r\nexport const Button = (props: PropsType) => {\r\n\r\n  const onClickHandler = () => props.callBack()\r\n\r\n  return (\r\n    <button disabled={props.value} className={s.button} onClick={onClickHandler}>{props.title}</button>\r\n  )\r\n}","export type CounterStateType = {\r\n  minValue: number\r\n  maxValue: number\r\n}\r\ntype ActionType = IncCounterACType | ResetCounterACType | SetCounterACType\r\ntype IncCounterACType = {\r\n  type: 'INC-COUNTER'\r\n}\r\ntype ResetCounterACType = {\r\n  type: 'SUB-COUNTER'\r\n}\r\ntype SetCounterACType = {\r\n  type: 'SET-COUNTER',\r\n  minValue: number,\r\n  maxValue: number\r\n}\r\n\r\nlet initialState: CounterStateType = {\r\n  minValue: 0,\r\n  maxValue: 5\r\n}\r\n\r\nexport const IncCounterAC = (): IncCounterACType => {\r\n  return {type: 'INC-COUNTER'}\r\n}\r\nexport const ResetCounterAC = (): ResetCounterACType => {\r\n  return {type: 'SUB-COUNTER'}\r\n}\r\nexport const SetCounterAC = (minValue: number, maxValue: number): SetCounterACType => {\r\n  return {type: 'SET-COUNTER', minValue, maxValue}\r\n}\r\n\r\nexport const counterReducer = (state = initialState, action: ActionType): CounterStateType => {\r\n  switch (action.type) {\r\n    case 'INC-COUNTER':\r\n      return {...state, minValue: state.minValue < state.maxValue ? state.minValue + 1 : state.minValue}\r\n    case 'SUB-COUNTER':\r\n      return {...state, minValue: state.minValue = 0}\r\n    case 'SET-COUNTER':\r\n      return {...state, minValue: action.minValue, maxValue: action.maxValue}\r\n  }\r\n  return state\r\n}","import React from \"react\";\r\nimport s from './CounterRedux.module.css';\r\nimport {Button} from \"../Counter/Button/Button\";\r\nimport {IncCounterAC, CounterStateType, ResetCounterAC} from \"../bll/counter-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../bll/store\";\r\nimport {SetCounterStateType} from \"../bll/setCounter-reducer\";\r\n\r\nexport const CounterRedux = () => {\r\n  const setCounter = useSelector<AppStateType, SetCounterStateType>((state) => state.setCounter)\r\n  const counter = useSelector<AppStateType, CounterStateType>((state) => state.counter)\r\n  const dispatch = useDispatch()\r\n\r\n  const incCounter = () => {\r\n    dispatch(IncCounterAC())\r\n  }\r\n  const subCounter = () => {\r\n    dispatch(ResetCounterAC())\r\n  }\r\n\r\n  let screenItem = () => {\r\n    if (setCounter.error) {\r\n      return <div className={s.error}>Incorrect value!</div>\r\n    }\r\n    if (setCounter.showStartText) {\r\n\r\n      return <div className={s.text}>Enter values and press 'set'</div>\r\n    } else {\r\n      return <div className={counter.minValue === counter.maxValue ? s.red : s.count}>{counter.minValue}</div>\r\n    }\r\n  }\r\n  const Error = () => setCounter.minValue >= setCounter.maxValue || setCounter.minValue < 0 || setCounter.maxValue < 0\r\n\r\n  return (\r\n    <>\r\n      <div className={s.screen}>\r\n        {screenItem()}\r\n      </div>\r\n      <div className={s.buttons}>\r\n        <Button title={'inc'} callBack={incCounter} value={counter.minValue === counter.maxValue || Error() || setCounter.disabledSet}/>\r\n        <Button title={'reset'} callBack={subCounter} value={counter.minValue === 0 || Error()}/>\r\n      </div>\r\n    </>\r\n  );\r\n}","export type SetCounterStateType = {\r\n  minValue: number\r\n  maxValue: number\r\n  error: boolean\r\n  showStartText: boolean\r\n  disabledSet: boolean\r\n}\r\ntype ActionType = SetMinValueACType | SetMaxValueACType | SetErrorACType | SetShowStartTextACType | ResetValueACType | DisabledSetAC\r\ntype SetMinValueACType = {\r\n  type: 'SET-MIN-VALUE',\r\n  minValue: number\r\n}\r\ntype SetMaxValueACType = {\r\n  type: 'SET-MAX-VALUE',\r\n  maxValue: number\r\n}\r\ntype SetErrorACType = {\r\n  type: 'ERROR'\r\n  change: boolean\r\n}\r\ntype SetShowStartTextACType = {\r\n  type: 'SHOW-START-TEXT'\r\n  change: boolean\r\n}\r\ntype ResetValueACType = {\r\n  type: 'RESET-VALUE',\r\n  value: number[]\r\n}\r\ntype DisabledSetAC = {\r\n  type: 'DISABLED-BUTTON-SET'\r\n  change: boolean\r\n}\r\n\r\nlet initialState: SetCounterStateType = {\r\n  minValue: 0,\r\n  maxValue: 5,\r\n  error: false,\r\n  showStartText: true,\r\n  disabledSet: false\r\n}\r\n\r\nexport const setCounterReducer = (state = initialState, action: ActionType): SetCounterStateType => {\r\n  switch (action.type) {\r\n    case 'SET-MIN-VALUE':\r\n      return {...state, minValue: state.minValue = action.minValue}\r\n    case 'SET-MAX-VALUE':\r\n      return {...state, maxValue: state.maxValue = action.maxValue}\r\n    case 'ERROR':\r\n      return {...state, error: state.error = action.change}\r\n    case 'SHOW-START-TEXT':\r\n      return {...state, showStartText: state.showStartText = action.change}\r\n    case 'RESET-VALUE':\r\n      return {...state, minValue: state.minValue = action.value[0], maxValue: state.maxValue = action.value[1]}\r\n    case 'DISABLED-BUTTON-SET':\r\n      return {...state, disabledSet: state.disabledSet = action.change}\r\n  }\r\n  return state\r\n}\r\n\r\nexport const SetMinValueAC = (minValue: number): SetMinValueACType => {\r\n  return {type: 'SET-MIN-VALUE', minValue}\r\n}\r\nexport const SetMaxValueAC = (maxValue: number): SetMaxValueACType => {\r\n  return {type: 'SET-MAX-VALUE', maxValue}\r\n}\r\nexport const ErrorAC = (change: boolean): SetErrorACType => {\r\n  return {type: 'ERROR', change}\r\n}\r\nexport const ShowStartTextAC = (change: boolean): SetShowStartTextACType => {\r\n  return {type: 'SHOW-START-TEXT', change}\r\n}\r\nexport const ResetValueAC = (value: number[]): ResetValueACType => {\r\n  return {type: 'RESET-VALUE', value}\r\n}\r\nexport const DisabledButtonSetAC = (change: boolean): DisabledSetAC => {\r\n  return {type: 'DISABLED-BUTTON-SET', change}\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport s from './SetCounterRedux.module.css'\r\nimport {Button} from \"../Counter/Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SetCounterAC} from \"../bll/counter-reducer\";\r\nimport {AppStateType} from \"../bll/store\";\r\nimport {\r\n  SetCounterStateType,\r\n  ErrorAC,\r\n  SetMaxValueAC,\r\n  SetMinValueAC,\r\n  ShowStartTextAC, ResetValueAC, DisabledButtonSetAC\r\n} from \"../bll/setCounter-reducer\";\r\n\r\nexport const SetCounterRedux = () => {\r\n  const setCounter = useSelector<AppStateType, SetCounterStateType>((state) => state.setCounter)\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeHandlerMinValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(DisabledButtonSetAC(true))\r\n    dispatch(SetMinValueAC(+e.currentTarget.value))\r\n    dispatch(ShowStartTextAC(true))\r\n    if (Error()) {\r\n      dispatch(ErrorAC(true))\r\n    } else return dispatch(ErrorAC(false))\r\n  }\r\n  const onChangeHandlerMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(DisabledButtonSetAC(true))\r\n    dispatch(SetMaxValueAC(+e.currentTarget.value))\r\n    dispatch(ShowStartTextAC(true))\r\n    if (Error()) {\r\n      dispatch(ErrorAC(true))\r\n    } else return dispatch(ErrorAC(false))\r\n  }\r\n  const setCount = () => {\r\n    dispatch(SetCounterAC(setCounter.minValue, setCounter.maxValue))\r\n    dispatch(ShowStartTextAC(false))\r\n    dispatch(DisabledButtonSetAC(false))\r\n  }\r\n  const resetCount = () => {\r\n    dispatch(ResetValueAC([0,5]))\r\n    dispatch(SetCounterAC(setCounter.minValue, setCounter.maxValue))\r\n  }\r\n  const Error = () => setCounter.minValue >= setCounter.maxValue || setCounter.minValue < 0 || setCounter.maxValue < 0\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.inpScreen}>\r\n        <div className={s.item}>Start Value :<input onChange={onChangeHandlerMinValue}\r\n                                                    className={Error() ? s.errorInp : s.inp} type=\"number\"\r\n                                                    value={setCounter.minValue}/></div>\r\n        <div className={s.item}>Max Value :<input onChange={onChangeHandlerMaxValue}\r\n                                                  className={Error() ? s.errorInp : s.inp} type=\"number\"\r\n                                                  value={setCounter.maxValue}/></div>\r\n      </div>\r\n      <div className={s.buttonBody}>\r\n        <Button title={'set'} callBack={setCount} value={Error()}/>\r\n        <Button title={'reset'} callBack={resetCount} value={false}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport s from './AppRedux.module.css';\nimport {CounterRedux} from \"./CounterRedux/CounterRedux\"\nimport {SetCounterRedux} from \"./CounterRedux/SetCounterRedux\";\n\nfunction AppRedux() {\n  return (\n    <div className={s.appWrapp}>\n      <div className={s.body}>\n        <SetCounterRedux/>\n      </div>\n      <div className={s.body}>\n        <CounterRedux/>\n      </div>\n    </div>\n  );\n}\n\nexport default AppRedux;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {counterReducer} from \"./counter-reducer\";\r\nimport {setCounterReducer} from \"./setCounter-reducer\";\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet preloadedState;\r\nconst parsistedTodoString = localStorage.getItem('app-state')\r\nif (parsistedTodoString) {\r\n  preloadedState = JSON.parse(parsistedTodoString)\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n  setCounter: setCounterReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, preloadedState)\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem('app-state', JSON.stringify(store.getState()))\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppRedux from \"./AppRedux\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppRedux/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inpScreen\":\"SetCounterRedux_inpScreen__1eOyM\",\"inp\":\"SetCounterRedux_inp__2NRRw\",\"item\":\"SetCounterRedux_item__3vu4f\",\"buttonBody\":\"SetCounterRedux_buttonBody__QBJqZ\",\"errorInp\":\"SetCounterRedux_errorInp__2ax3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"CounterRedux_screen__2QNbL\",\"count\":\"CounterRedux_count__XaLhk\",\"red\":\"CounterRedux_red__1cVce\",\"buttons\":\"CounterRedux_buttons__pwmwI\",\"text\":\"CounterRedux_text__28ZXZ\",\"error\":\"CounterRedux_error__3SYMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"AppRedux_body__2Tan5\",\"appWrapp\":\"AppRedux_appWrapp__2Qcga\"};"],"sourceRoot":""}